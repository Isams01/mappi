<!DOCTYPE html>
<html lang="en">

<head>
  <title>Home Page</title>

  <link rel="stylesheet" href="/vendor/normalize-4.1.1.css" type="text/css" />
  <link rel="stylesheet" href="/vendor/border-box.css" type="text/css" />
  <link rel="stylesheet" href="/styles/layout.css" type="text/css" />

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Akaya+Telivigala&family=Varela+Round&display=swap" rel="stylesheet">

  <script type="text/javascript" src="/vendor/jquery-3.0.0.js"></script>
  <!-- <script type="text/javascript" src="/scripts/app.js"></script> -->

</head>

<body>
  <%- include('partials/_header') %>
  <div class="map-container">
    <div id="map"></div>

    <div class="map-info-side">

      <form class="map-info">
        <h2>Title: <%= mapData.title %></h2>
        <h3>Description: <%= mapData.description %></h3>
        <input class="save-map" id="save-map" type="submit" value="Save Mappi">
      </form>
      <button class="save-map" id="save-map" type="submit" onclick="saveMap()">Save Mappi</button>

      <form class="update-pin">
        <h2 id="update-pin-id">Edit Mappi Pin</h2>
        <div class="update-pin-title">
            <label for="update-pin-title">Pin Title</label><br>
            <input type="text" id="update-pin-title" name="update-pin-title" required>
        </div>

        <div class="update-pin-description">
            <label for="update-pin-description">Pin Description</label><br>
            <textarea id="update-pin-descprition" name="update-pin-description" required></textarea>
        </div>

        <div class="update-pin-url">
            <label for="update-pin-url">Pin URL</label><br>
            <input type="text" id="update-pin-url" name="update-pin-url" required>
        </div>
      </form>
      <div class="update-pin-submit" id="update-pin-button"></div>
    </div>

</div>
  </div>

  <script>
    // This id will have to be stored in the database
    let infowindow = null;
    let markerId = 0;
    let selectedMarkerId = 0;
    const mapId = <%= mapData.id %>;

    const uniqueId = function() {
        return ++markerId;
    }

    // The markers object is exposed to the console
    // In the browser type "markers" and hit enter to see all the markers
    // To get a position of a single marker (ex. id=1) type the following
    // markers[1].position.lat()
    // or
    // markers[1].position.lng()
    let markers = {};

    function imageExists(url, callback) {
      if(url.match(/^http:\/\/.*/) || url.match(/^https:\/\/.*/)){
        var img = new Image();
        img.onload = function() { callback(true); };
        img.onerror = function() { callback(false); };
        img.src = url;
      } else {
        callback(false);
      };
    }

    const updatePinInfo = function(id) {
      let imageTag ='';
      imageExists(markers[id].image_url, (exists) => {
        console.log("exist= ", exists);
        if  (exists) {
          imageTag = `<img src="${markers[id].image_url}">`
        } else {
          imageTag = `<img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png">`;
        }
        const contentString = `
        <div class="infowindow" id="infowindow">
            <h1>${markers[id].title}</h1>
            ${imageTag}
            <p>${markers[id].description}</p>
            <button onclick="deleteMarker(${id})" id="deletebtn${id}">Delete</button>
        </div>
        `;
        console.log(markers[id]);
        markers[id].infoWindowContent = contentString;
        infowindow.setContent(contentString)
      })
    };

    const savePin = function(id) {
      markers[id].title = document.getElementById('update-pin-title').value;
      markers[id].description = document.getElementById('update-pin-descprition').value;
      markers[id].image_url = document.getElementById('update-pin-url').value;
      updatePinInfo(id);
      document.getElementById('update-pin-title').value = '';
      document.getElementById('update-pin-descprition').value = '';
      document.getElementById('update-pin-url').value = '';
    };

    const parsePins = function(pins) {
      newObj = {};
      for(const pin in pins){
        newObj[pin] = {
          map_id: pins[pin].map_id,
          title: pins[pin].title,
          description: pins[pin].description,
          image_url: pins[pin].image_url,
          lat: pins[pin].position.lat(),
          lng: pins[pin].position.lng(),
          address: pins[pin].address
        }
      }
      return newObj;
    };

    const saveMap = function() {
      $.ajax({
        url: '/pins',
        method: 'POST',
        data: parsePins(markers),
      }).done(response => {
        window.location.replace(response);
      });
    }


    const editMarker = function(id) {
      // console.log('Editing marker ', id);
      let form = document.querySelector("form.update-pin");
      document.getElementById('update-pin-id').innerHTML = `Edit Mappi Pin id: ${id}` // change this to title
      form.style.display = 'flex';
      document.querySelector("input#update-pin-title").focus();
      document.querySelector('#update-pin-button').innerHTML=`<button id="save-pin-local" onclick="savePin(${id})">Save Pin</button>`;
    };

    const addlistener = function(id) {
      console.log('adding listener to id', id);
      document.getElementById(`deletebtn${id}`).addEventListener('click', ()=>{
        console.log(id);
      })
    }

    const createMarker = function(map, position) {
      const id = uniqueId(); // get new id
      const marker = new google.maps.Marker({ // create a marker and set id
          id: id, // this should auto increment, but for local use we manually
          title:'',
          description:'',
          image_url:'',
          position: position,
          map: map,
          draggable: true,
          animation: google.maps.Animation.DROP,
          address: 'address',
          map_id: mapId,
          infoWindowContent:`
            <div class="infowindow" id="infowindow">
              <h1>My id is ${id}</h1>
              <img src="https://i.imgur.com/uVU4ffo.jpg">
              <p>This is my long long long very very very very long description</p>
              <button onclick="deleteMarker(${id})" id="deletebtn${id}">Delete</button>
            </div>`
      });

      infowindow = new google.maps.InfoWindow({
        content: marker.infoWindowContent,
      });


      // add click listener
      marker.addListener("click", () => {
        if (infowindow){
          infowindow.close();
        }

      infowindow = new google.maps.InfoWindow({
        content: marker.infoWindowContent,
      });
        selectedMarkerId = marker.id;
        infowindow.open(map, marker);
        editMarker(selectedMarkerId);
      });


      markers[id] = marker; // cache created marker to markers object with id as its key
      return marker;
    }




    const deleteMarker = function(id) {
        const marker = markers[id]; // find the marker by given id
        marker.setMap(null);
        delete markers[id];
    }

    // ############################ this data will be filled out by ejs ###############################
    // const mapData = {
    //   id: //generate
    //   title: //from form
    //   category:
    //   lat:,
    //   lng:
    //   zoom:
    //   description:
    // }

    function initMap() {
      // The location of Uluru
      const myLatlng = { lat: -25.363, lng: 131.044 };

      const uluru = { lat: -25.344, lng: 131.036 }; // make api request to user current locaiton?

      // The map, centered at Uluru
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 4,
        center: uluru,
      });

      // Configure the click listener.
      map.addListener("click", (mapsMouseEvent) => {
        const latLng = {
          lat: mapsMouseEvent.latLng.toJSON().lat,
          lng: mapsMouseEvent.latLng.toJSON().lng
        }

        const marker = createMarker(map, latLng);

      });
    };




  </script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= API_KEY %>&callback=initMap"
    type="text/javascript"></script>


</body>

</html>
